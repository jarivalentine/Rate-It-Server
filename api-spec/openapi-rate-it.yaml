openapi: 3.0.3
info:
  title: Rating App
  description: This is the API for the Rating App
  version: 1.0.0
tags:
  - name: topic
  - name: ratable
  - name: rating
  - name: user
paths:
  /topic:
    get:
      summary: Fetch all topics
      description: Retreive all topics of rating app
      tags: 
        - topic
      parameters:
        - name: filter
          in: query
          description: Filter on name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
        '400':
          description: Invalid status value
    post:
      summary: Create a topic
      description: Create a topic of the rating app
      tags: 
        - topic
      requestBody:
        description: Topic to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        '400':
          description: Invalid status value
  /topic/{topicName}: 
    parameters:
      - name: topicName
        in: path
        description: Name of the topic
        required: true
        schema:
          type: string
    delete:
      summary: Delete a topic
      description: Delete a topic of the rating app
      tags: 
        - topic
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        '400':
          description: Invalid status value
  /topic/{topicName}/ratable:
    parameters:
      - name: topicName
        in: path
        description: Name of the topic
        required: true
        schema:
          type: string
    get:
      summary: Fetch all ratables
      description: Retreive all ratables of a topic
      tags: 
        - ratable
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Invalid status value
    post:
      summary: Create a ratable
      description: Create a ratable of a topic
      tags: 
        - ratable
      requestBody:
        description: Ratable to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ratable'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ratable'
        '400':
          description: Invalid status value
  /topic/{topicName}/ratable/{ratableId}:
    parameters:
      - name: topicName
        in: path
        description: Name of the topic
        required: true
        schema:
          type: string
      - name: ratableId
        in: path
        description: Name of the ratable
        required: true
        schema:
          type: string
    get:
      summary: Fetch a ratable
      description: Retreive a ratable of a topic
      tags: 
        - ratable
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ratable'
        '400':
          description: Invalid status value
    put:
      summary: Update a ratable
      description: Update a ratable of a topic
      tags: 
        - ratable
      requestBody:
        description: Ratable to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ratable'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ratable'
        '400':
          description: Invalid status value
    delete:
      summary: Delete a ratable
      description: Delete a ratable of a topic
      tags: 
        - ratable
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ratable'
        '400':
          description: Invalid status value
  /topic/{topicName}/ratable/{ratableId}/rating:
    parameters:
      - name: topicName
        in: path
        description: Name of the topic
        required: true
        schema:
          type: string
      - name: ratableId
        in: path
        description: Name of ratable
        required: true
        schema:
          type: string
    get:
      summary: Fetch all ratings
      description: Retreive all ratings of a ratable
      tags: 
        - rating
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid status value
    post:
      summary: Create a rating
      description: Create a rating of a ratable
      tags: 
        - rating
      requestBody:
        description: Rating
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid status value
  /topic/{topicName}/ratable/{ratableId}/rating/{ratingId}:
    parameters:
      - name: topicName
        in: path
        description: Name of the topic
        required: true
        schema:
          type: string
      - name: ratableId
        in: path
        description: Name of the ratable
        required: true
        schema:
          type: string
      - name: ratingId
        in: path
        description: Id of the rating
        required: true
        schema:
          type: string
    delete:
      summary: Delete a rating
      description: Delete a rating of a ratable
      tags: 
        - rating
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid status value
  /user:
    get:
      summary: Fetch all users
      description: Retreive all users of rating app
      tags: 
        - user
      parameters:
        - name: filter
          in: query
          description: Filter on name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Invalid status value
    post:
      summary: Create a user
      description: Create a user of the rating app
      tags: 
        - user
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
  /user/{userName}:
    parameters:
      - name: userName
        in: path
        description: Name of the user
        required: true
        schema:
          type: string
    get:
      summary: Fetch a user
      description: Retreive a user of the rating app
      tags: 
        - user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
    put:
      summary: Update a user
      description: Update a user of the rating app
      tags: 
        - user
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
    delete:
      summary: Delete a user
      description: Delete a user of the rating app
      tags: 
        - user
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
components:
  schemas:
    Topic:
      type: object
      required:
        - topicName
      properties:
        topicName:
          type: string
    Ratable:
      type: object
      required:
        - id
        - ratableId
        - description
        - image
      properties:
        id:
          type: string
        ratableId:
          type: string
        description:
          type: string
        image:
          type: string
    Rating:
      type: object
      required:
        - id
        - score
      properties:
        id:
          type: string
        score:
          type: number
          format: float
    User:
      type: object
      required:
        - userName
      properties:
        userName:
          type: string